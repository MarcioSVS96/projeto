generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role
  cursos    Curso[]   @relation("InstrutorCursos")
  certificados Certificado[]
  comentarios  Comentario[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Curso {
  id          Int        @id @default(autoincrement())
  titulo      String
  descricao   String
  instrutor   User       @relation("InstrutorCursos", fields: [instrutorId], references: [id])
  instrutorId Int
  modulos     Modulo[]
  provas      Prova[]
  certificados Certificado[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Modulo {
  id        Int       @id @default(autoincrement())
  titulo    String
  curso     Curso     @relation(fields: [cursoId], references: [id])
  cursoId   Int
  videoUrl  String
  arquivos  String?
  comentarios Comentario[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Prova {
  id        Int       @id @default(autoincrement())
  titulo    String
  curso     Curso     @relation(fields: [cursoId], references: [id])
  cursoId   Int
  questoes  String    // JSON contendo perguntas e alternativas
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Certificado {
  id        Int      @id @default(autoincrement())
  aluno     User     @relation(fields: [alunoId], references: [id])
  alunoId   Int
  curso     Curso    @relation(fields: [cursoId], references: [id])
  cursoId   Int
  emitidoEm DateTime @default(now())
}

model Comentario {
  id        Int      @id @default(autoincrement())
  aluno     User     @relation(fields: [alunoId], references: [id])
  alunoId   Int
  modulo    Modulo   @relation(fields: [moduloId], references: [id])
  moduloId  Int
  texto     String
  criadoEm  DateTime @default(now())
}

enum Role {
  ADMIN
  INSTRUTOR
  ALUNO
}
